{"version":3,"file":"prolease-ifrs16-plugin.js","sources":["../src/plugins/prolease-ifrs16-plugin.ts","../src/plugins/index.ts"],"sourcesContent":["/**\n * ProLease IFRS 16 Plugin for DataForge v6\n *\n * Native TypeScript implementation following DataForge v6 plugin architecture\n * Provides complete IFRS 16 lease accounting calculations with amortization schedules\n *\n * @author DJCalc / C√≥digo\n * @version 6.0.0\n * @date 2025-10-23\n */\n\nimport type { PluginContext, PluginManifest } from '../@core/types';\nimport type { Plugin } from '../@core/plugin-system-consolidated';\nimport type { Sheet } from '../@core/workbook-consolidated';\nimport { logger } from '../@core/storage-utils-consolidated';\n\n// ============================================================================\n// TYPES & INTERFACES\n// ============================================================================\n\ninterface LeaseContract {\n  id: string;\n  contractName: string;\n  termMonths: number;\n  startDate: string; // YYYY-MM-DD\n  totalRent: number;\n  serviceDeductions: number;\n  discountRate: number; // Annual percentage\n  initialLandlordAllowance: number;\n  initialDirectCosts: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\n// ============================================================================\n// PLUGIN CLASS\n// ============================================================================\n\nexport class ProLeasePlugin implements Plugin {\n  manifest: PluginManifest = {\n    id: 'dj.ifrs16.prolease',\n    name: 'ProLease IFRS 16',\n    version: '6.0.0',\n    author: 'DJCalc / C√≥digo',\n    description: 'IFRS 16 lease accounting calculator with comprehensive amortization schedules',\n    permissions: [\n      'read:workbook',\n      'write:workbook',\n      'ui:toolbar',\n      'ui:panel',\n      'formula:register',\n      'read:storage',\n      'write:storage',\n    ],\n    entryPoint: 'prolease-ifrs16-plugin.ts',\n  };\n\n  private context!: PluginContext;\n  private contracts: LeaseContract[] = [];\n  private worker?: Worker;\n\n  // ========================================================================\n  // LIFECYCLE METHODS\n  // ========================================================================\n\n  async init(context: PluginContext): Promise<void> {\n    this.context = context;\n    logger.info('[ProLeasePlugin] Initializing v6.0.0...');\n\n    try {\n      // Load saved contracts from persistent storage\n      await this.loadContracts();\n\n      // Create Web Worker for background calculations\n      this.worker = this.createCalculationWorker();\n\n      // Register IFRS 16 formulas for spreadsheet use\n      this.registerFormulas();\n\n      // Setup UI elements\n      this.setupUI();\n\n      logger.info(`[ProLeasePlugin] Ready with ${this.contracts.length} saved contracts`);\n      context.ui.showToast(`ProLease IFRS 16 loaded! ${this.contracts.length} contract(s)`, 'success');\n    } catch (error) {\n      logger.error('[ProLeasePlugin] Initialization failed', error);\n      context.ui.showToast('Failed to load ProLease plugin', 'error');\n      throw error;\n    }\n  }\n\n  async dispose(): Promise<void> {\n    logger.info('[ProLeasePlugin] Disposing...');\n\n    // Terminate worker\n    if (this.worker) {\n      this.worker.terminate();\n      this.worker = undefined;\n    }\n\n    // Save any pending data\n    await this.saveContracts();\n\n    logger.info('[ProLeasePlugin] Disposed successfully');\n  }\n\n  // ========================================================================\n  // DATA PERSISTENCE\n  // ========================================================================\n\n  private async loadContracts(): Promise<void> {\n    try {\n      const saved = await this.context.storage.get('contracts');\n      this.contracts = saved || [];\n      logger.info(`[ProLeasePlugin] Loaded ${this.contracts.length} contracts`);\n    } catch (error) {\n      logger.error('[ProLeasePlugin] Failed to load contracts', error);\n      this.contracts = [];\n    }\n  }\n\n  private async saveContracts(): Promise<void> {\n    try {\n      await this.context.storage.set('contracts', this.contracts);\n      logger.info(`[ProLeasePlugin] Saved ${this.contracts.length} contracts`);\n    } catch (error) {\n      logger.error('[ProLeasePlugin] Failed to save contracts', error);\n      throw error;\n    }\n  }\n\n  // ========================================================================\n  // FORMULA REGISTRATION\n  // ========================================================================\n\n  private registerFormulas(): void {\n    const registry = this.context.kernel.calcEngine.getRegistry();\n\n    // Present Value for Lease Payments\n    registry.register(\n      'LEASE_PV',\n      (monthlyRate: number, months: number, payment: number) => {\n        if (monthlyRate === 0) return payment * months;\n        return payment * ((1 - Math.pow(1 + monthlyRate, -months)) / monthlyRate);\n      },\n      {\n        argCount: 3,\n        description: 'Calculate present value for lease payments (rate, months, payment)',\n      }\n    );\n\n    // Convert Annual Rate to Monthly Rate\n    registry.register(\n      'LEASE_MONTHLY_RATE',\n      (annualRate: number) => {\n        return Math.pow(1 + annualRate / 100, 1 / 12) - 1;\n      },\n      {\n        argCount: 1,\n        description: 'Convert annual discount rate to monthly rate (annual %)',\n      }\n    );\n\n    // Calculate ROU Asset Opening Balance\n    registry.register(\n      'LEASE_ROU_OPENING',\n      (leaseLiability: number, directCosts: number, allowance: number) => {\n        return leaseLiability + directCosts - allowance;\n      },\n      {\n        argCount: 3,\n        description: 'Calculate opening ROU asset (liability, direct costs, allowance)',\n      }\n    );\n\n    logger.info('[ProLeasePlugin] Registered 3 IFRS 16 formulas');\n  }\n\n  // ========================================================================\n  // UI SETUP\n  // ========================================================================\n\n  private setupUI(): void {\n    // Add toolbar button\n    this.context.ui.addToolbarButton({\n      id: 'prolease-new-contract',\n      label: 'New Lease',\n      icon: 'üìã',\n      tooltip: 'Create new IFRS 16 lease contract',\n      onClick: () => this.handleNewContract(),\n    });\n\n    // Add control panel\n    this.context.ui.addPanel({\n      id: 'prolease-manager',\n      title: 'üìã ProLease Manager',\n      position: 'right',\n      render: (container) => this.renderControlPanel(container),\n    });\n\n    logger.info('[ProLeasePlugin] UI elements registered');\n  }\n\n  private renderControlPanel(container: HTMLElement): void {\n    container.innerHTML = `\n      <div class=\"prolease-panel\" style=\"padding: 8px;\">\n        <button id=\"prolease-create-btn\" class=\"prolease-btn-primary\" style=\"\n          width: 100%;\n          padding: 10px;\n          margin-bottom: 12px;\n          background: #3b82f6;\n          color: white;\n          border: none;\n          border-radius: 6px;\n          cursor: pointer;\n          font-weight: 500;\n        \">\n          ‚ûï Create New Contract\n        </button>\n\n        <div style=\"margin-bottom: 8px; font-size: 12px; color: #64748b; font-weight: 500;\">\n          SAVED CONTRACTS (${this.contracts.length})\n        </div>\n\n        <div id=\"prolease-contracts-list\" style=\"\n          max-height: 400px;\n          overflow-y: auto;\n          border: 1px solid #e2e8f0;\n          border-radius: 6px;\n        \">\n          ${this.renderContractsList()}\n        </div>\n      </div>\n    `;\n\n    // Attach event listeners\n    const createBtn = container.querySelector('#prolease-create-btn');\n    createBtn?.addEventListener('click', () => this.handleNewContract());\n\n    this.attachContractListeners(container);\n  }\n\n  private renderContractsList(): string {\n    if (this.contracts.length === 0) {\n      return `\n        <div style=\"padding: 20px; text-align: center; color: #94a3b8; font-size: 13px;\">\n          No contracts yet.<br>Click \"Create New Contract\" to begin.\n        </div>\n      `;\n    }\n\n    return this.contracts\n      .map(\n        (c) => `\n        <div class=\"contract-item\" style=\"\n          padding: 12px;\n          border-bottom: 1px solid #e2e8f0;\n          transition: background 0.2s;\n        \">\n          <div style=\"font-weight: 600; font-size: 14px; color: #1e293b; margin-bottom: 4px;\">\n            ${this.escapeHtml(c.contractName)}\n          </div>\n          <div style=\"font-size: 12px; color: #64748b; margin-bottom: 8px;\">\n            üìÖ ${new Date(c.startDate).toLocaleDateString()} |\n            üìä ${c.termMonths} months |\n            üí∞ ${this.formatCurrency(c.totalRent)}/mo\n          </div>\n          <div style=\"display: flex; gap: 6px;\">\n            <button\n              data-contract-id=\"${c.id}\"\n              data-action=\"recalc\"\n              style=\"\n                flex: 1;\n                padding: 6px 12px;\n                font-size: 12px;\n                background: #10b981;\n                color: white;\n                border: none;\n                border-radius: 4px;\n                cursor: pointer;\n                font-weight: 500;\n              \">\n              üîÑ Recalculate\n            </button>\n            <button\n              data-contract-id=\"${c.id}\"\n              data-action=\"delete\"\n              style=\"\n                padding: 6px 12px;\n                font-size: 12px;\n                background: #ef4444;\n                color: white;\n                border: none;\n                border-radius: 4px;\n                cursor: pointer;\n                font-weight: 500;\n              \">\n              üóëÔ∏è\n            </button>\n          </div>\n        </div>\n      `\n      )\n      .join('');\n  }\n\n  private attachContractListeners(container: HTMLElement): void {\n    // Recalculate buttons\n    container.querySelectorAll('[data-action=\"recalc\"]').forEach((btn) => {\n      btn.addEventListener('click', (e) => {\n        const contractId = (e.target as HTMLElement).getAttribute('data-contract-id');\n        const contract = this.contracts.find((c) => c.id === contractId);\n        if (contract) {\n          this.handleRecalculate(contract);\n        }\n      });\n    });\n\n    // Delete buttons\n    container.querySelectorAll('[data-action=\"delete\"]').forEach((btn) => {\n      btn.addEventListener('click', (e) => {\n        const contractId = (e.target as HTMLElement).getAttribute('data-contract-id');\n        this.handleDelete(contractId);\n      });\n    });\n\n    // Hover effects\n    container.querySelectorAll('.contract-item').forEach((item) => {\n      item.addEventListener('mouseenter', () => {\n        (item as HTMLElement).style.background = '#f8fafc';\n      });\n      item.addEventListener('mouseleave', () => {\n        (item as HTMLElement).style.background = 'transparent';\n      });\n    });\n  }\n\n  // ========================================================================\n  // USER ACTIONS\n  // ========================================================================\n\n  private handleNewContract(): void {\n    logger.info('[ProLeasePlugin] Creating new contract');\n\n    const contractName = prompt('Contract Name:', `Contract ${this.contracts.length + 1}`);\n    if (!contractName) {\n      this.context.ui.showToast('Contract creation cancelled', 'info');\n      return;\n    }\n\n    if (this.contracts.some((c) => c.contractName === contractName)) {\n      this.context.ui.showToast('Contract name already exists', 'error');\n      return;\n    }\n\n    const termMonths = this.promptNumber('Term (months):', 36);\n    if (termMonths === null || termMonths <= 0) return;\n\n    const startDate = prompt(\n      'Start Date (YYYY-MM-DD):',\n      new Date().toISOString().split('T')[0]\n    );\n    if (!startDate) return;\n\n    const totalRent = this.promptNumber('Monthly Rent (gross):', 80000);\n    if (totalRent === null || totalRent <= 0) return;\n\n    const serviceDeductions = this.promptNumber('Monthly Service Deductions:', 5000);\n    if (serviceDeductions === null) return;\n\n    const discountRate = this.promptNumber('Annual Discount Rate (%):', 15);\n    if (discountRate === null) return;\n\n    const initialLandlordAllowance = this.promptNumber('Landlord Allowance:', 0);\n    if (initialLandlordAllowance === null) return;\n\n    const initialDirectCosts = this.promptNumber('Initial Direct Costs:', 30000);\n    if (initialDirectCosts === null) return;\n\n    const contract: LeaseContract = {\n      id: this.generateId(),\n      contractName,\n      termMonths,\n      startDate,\n      totalRent,\n      serviceDeductions,\n      discountRate,\n      initialLandlordAllowance,\n      initialDirectCosts,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n    };\n\n    this.contracts.push(contract);\n    this.saveContracts();\n\n    logger.info('[ProLeasePlugin] Contract created', { id: contract.id, name: contractName });\n    this.context.ui.showToast(`Contract \"${contractName}\" created. Calculating...`, 'info');\n\n    this.calculateAndCreateSheet(contract);\n    this.refreshControlPanel();\n  }\n\n  private handleRecalculate(contract: LeaseContract): void {\n    logger.info('[ProLeasePlugin] Recalculating contract', { id: contract.id });\n    this.context.ui.showToast(`Recalculating \"${contract.contractName}\"...`, 'info');\n    this.calculateAndCreateSheet(contract);\n  }\n\n  private async handleDelete(contractId: string | null): Promise<void> {\n    if (!contractId) return;\n\n    const contract = this.contracts.find((c) => c.id === contractId);\n    if (!contract) return;\n\n    if (!confirm(`Delete contract \"${contract.contractName}\"?\\n\\nThis action cannot be undone.`)) {\n      return;\n    }\n\n    this.contracts = this.contracts.filter((c) => c.id !== contractId);\n    await this.saveContracts();\n\n    logger.info('[ProLeasePlugin] Contract deleted', { id: contractId });\n    this.context.ui.showToast('Contract deleted', 'success');\n\n    this.refreshControlPanel();\n  }\n\n  // ========================================================================\n  // CALCULATION ENGINE\n  // ========================================================================\n\n  private calculateAndCreateSheet(contract: LeaseContract): void {\n    if (!this.worker) {\n      this.context.ui.showToast('Calculator not ready', 'error');\n      return;\n    }\n\n    this.worker.postMessage({ action: 'calculate', payload: contract });\n\n    this.worker.onmessage = (event) => {\n      const { action, payload, error } = event.data || {};\n\n      if (error) {\n        logger.error('[ProLeasePlugin] Calculation error:', error);\n        this.context.ui.showToast(`Calculation error: ${error}`, 'error');\n        return;\n      }\n\n      if (action === 'calculationComplete') {\n        this.populateSheet(contract, payload.calculatedRows);\n      }\n    };\n  }\n\n  private populateSheet(contract: LeaseContract, calculatedRows: any[][]): void {\n    try {\n      const wbManager = this.context.kernel.workbookManager;\n\n      // Get or create workbook\n      let wb = wbManager.getActiveWorkbook();\n      if (!wb) {\n        wb = wbManager.createWorkbook('ProLease IFRS 16 Calculations');\n        wbManager.setActiveWorkbook(wb.id);\n        logger.info('[ProLeasePlugin] Created new workbook');\n      }\n\n      // Create or get sheet\n      const sheetName = `IFRS16 - ${contract.contractName}`;\n      const sheets = Array.from(wb.sheets.values()) as Sheet[];\n      let sheet: Sheet | undefined = sheets.find((s: Sheet) => s.name === sheetName);\n\n      if (!sheet) {\n        sheet = wb.addSheet(sheetName);\n        logger.info('[ProLeasePlugin] Created new sheet', { name: sheetName });\n      } else {\n        // Clear existing data\n        const rows = sheet.rows;\n        rows.forEach((rowMap: Map<number, any>, rowIdx: number) => {\n          rowMap.forEach((_cell: any, colIdx: number) => {\n            sheet!.clearCell(rowIdx, colIdx);\n          });\n        });\n        logger.info('[ProLeasePlugin] Cleared existing sheet', { name: sheetName });\n      }\n\n      if (!sheet) {\n        throw new Error('Failed to create or get sheet');\n      }\n\n      // Populate with headers and data\n      const headers = calculatedRows[0] || [];\n      const dataRows = calculatedRows.slice(1) || [];\n\n      // Set headers\n      headers.forEach((header: any, col: number) => {\n        sheet!.setCell(0, col, String(header), {\n          type: 'string',\n          format: { bold: true, alignment: 'center' },\n        });\n      });\n\n      // Set data rows\n      dataRows.forEach((row: any[], rowIdx: number) => {\n        row.forEach((val: any, col: number) => {\n          const cellType = typeof val === 'number' ? 'number' : col === 1 ? 'date' : 'string';\n          sheet!.setCell(rowIdx + 1, col, val, { type: cellType });\n        });\n      });\n\n      // Activate the sheet\n      wb.setActiveSheet(sheet.id);\n\n      // Trigger recalculation\n      this.context.kernel.kernel.recalculate(sheet.id, undefined, { force: true });\n\n      logger.info('[ProLeasePlugin] Sheet populated successfully', {\n        contract: contract.contractName,\n        rows: dataRows.length,\n        cols: headers.length,\n      });\n\n      this.context.ui.showToast(`Sheet \"${sheetName}\" created with ${dataRows.length} rows!`, 'success');\n    } catch (error) {\n      logger.error('[ProLeasePlugin] Sheet population failed', error);\n      this.context.ui.showToast('Failed to create sheet', 'error');\n    }\n  }\n\n  // ========================================================================\n  // WEB WORKER CREATION\n  // ========================================================================\n\n  private createCalculationWorker(): Worker {\n    const code = `\n      // IFRS 16 Calculation Worker\n      self.onmessage = function(event) {\n        const { action, payload } = event.data || {};\n        if (action !== 'calculate') return;\n\n        try {\n          const rows = generate(payload);\n          const headers = getHeaders();\n          self.postMessage({\n            action: 'calculationComplete',\n            payload: { contractData: payload, calculatedRows: [headers, ...rows] }\n          });\n        } catch (error) {\n          self.postMessage({ error: (error && error.message) || String(error) });\n        }\n      };\n\n      function getHeaders() {\n        return [\n          \"Month #\",\n          \"Date\",\n          \"A) Sum of All Costs\",\n          \"B) Monthly Service Deductions\",\n          \"C) Landlord TI Allowance after Commence Date\",\n          \"D) Total Rent to be Capitalized (A + B + C)\",\n          \"Remaining Present Value\",\n          \"E) Interest\",\n          \"End of Month Lease Liability\",\n          \"Current Short Term (ST) Liability\",\n          \"Non Current Long Term (LT) Liability\",\n          \"Proof Column (ST+LT)\",\n          \"F) New Initial Landlord Allowance\",\n          \"I) Allowance Amortization\",\n          \"J) Allowance Closing Balance\",\n          \"K) New IDC\",\n          \"N) IDC Amortization\",\n          \"O) IDC Closing Balance\",\n          \"S) Opening ROU Asset\",\n          \"U) ROU Asset Amortization\",\n          \"V) ROU Asset Closing Balance\",\n          \"Total ROU Asset Closing Balance (J+O+V)\",\n          \"W) Total P&L Non-Financial Expense\",\n          \"P&L - Reported Lease Expense (E+W)\"\n        ];\n      }\n\n      function generate(d) {\n        const rows = [];\n        const termMonths = Number(d.termMonths || 0);\n        const totalRent = Number(d.totalRent || 0);\n        const serviceDeductions = Number(d.serviceDeductions || 0);\n        const discountRate = Number(d.discountRate || 0);\n        const initialLandlordAllowance = Number(d.initialLandlordAllowance || 0);\n        const initialDirectCosts = Number(d.initialDirectCosts || 0);\n        const startDate = new Date(d.startDate);\n\n        const monthlyDiscountRate = Math.pow(1 + (discountRate / 100), 1/12) - 1;\n        const rentToCapitalize = totalRent - serviceDeductions;\n\n        // Calculate initial lease liability (present value of all payments)\n        let initialLeaseLiability = 0;\n        for (let i = 0; i < termMonths; i++) {\n          initialLeaseLiability += rentToCapitalize / Math.pow(1 + monthlyDiscountRate, i + 1);\n        }\n\n        // Opening ROU asset\n        const openingROU = initialLeaseLiability + initialDirectCosts - initialLandlordAllowance;\n\n        // Monthly amortization amounts\n        const allowanceAmort = termMonths > 0 ? initialLandlordAllowance / termMonths : 0;\n        const idcAmort = termMonths > 0 ? initialDirectCosts / termMonths : 0;\n        const rouAmort = termMonths > 0 ? openingROU / termMonths : 0;\n\n        // Running balances\n        let curLease = initialLeaseLiability;\n        let curAllowance = initialLandlordAllowance;\n        let curIDC = initialDirectCosts;\n        let curROU = openingROU;\n\n        // Generate monthly rows\n        for (let i = 1; i <= termMonths; i++) {\n          const row = [];\n          const curDate = new Date(startDate);\n          curDate.setMonth(curDate.getMonth() + (i - 1));\n\n          // Interest and principal\n          const interest = curLease * monthlyDiscountRate;\n          const principal = rentToCapitalize - interest;\n\n          // Month number and date\n          row[0] = i;\n          row[1] = curDate.toISOString().split('T')[0];\n\n          // Costs\n          row[2] = totalRent;\n          row[3] = serviceDeductions;\n          row[4] = 0; // TI Allowance after commence (typically 0)\n          row[5] = rentToCapitalize;\n\n          // Remaining PV\n          let remainingPV = 0;\n          for (let j = i; j < termMonths; j++) {\n            remainingPV += rentToCapitalize / Math.pow(1 + monthlyDiscountRate, j - i + 1);\n          }\n          row[6] = remainingPV;\n\n          // Interest and liability\n          row[7] = interest;\n          curLease -= principal;\n          row[8] = Math.abs(curLease) < 0.01 ? 0 : curLease;\n\n          // ST/LT classification\n          let st = 0, lt = 0, tmp = curLease;\n          for (let m = 0; m < (termMonths - i); m++) {\n            const fInt = tmp * monthlyDiscountRate;\n            const fPr = rentToCapitalize - fInt;\n            if (m < 12) st += fPr;\n            else lt += fPr;\n            tmp -= fPr;\n          }\n          row[9] = st;\n          row[10] = lt;\n          row[11] = st + lt;\n\n          // Landlord allowance\n          row[12] = (i === 1) ? initialLandlordAllowance : 0;\n          row[13] = allowanceAmort;\n          curAllowance -= allowanceAmort;\n          row[14] = Math.abs(curAllowance) < 0.01 ? 0 : curAllowance;\n\n          // Initial direct costs\n          row[15] = (i === 1) ? initialDirectCosts : 0;\n          row[16] = idcAmort;\n          curIDC -= idcAmort;\n          row[17] = Math.abs(curIDC) < 0.01 ? 0 : curIDC;\n\n          // ROU asset\n          row[18] = curROU;\n          row[19] = rouAmort;\n          curROU -= rouAmort;\n          row[20] = Math.abs(curROU) < 0.01 ? 0 : curROU;\n\n          // Total ROU and P&L\n          row[21] = curROU + curIDC + curAllowance;\n          row[22] = rouAmort + idcAmort - allowanceAmort;\n          row[23] = interest + row[22];\n\n          rows.push(row);\n        }\n\n        return rows;\n      }\n    `;\n\n    const blob = new Blob([code], { type: 'application/javascript' });\n    const url = URL.createObjectURL(blob);\n    const worker = new Worker(url);\n\n    setTimeout(() => {\n      try {\n        URL.revokeObjectURL(url);\n      } catch (_) {}\n    }, 1000);\n\n    logger.info('[ProLeasePlugin] Calculation worker created');\n    return worker;\n  }\n\n  // ========================================================================\n  // UTILITY METHODS\n  // ========================================================================\n\n  private refreshControlPanel(): void {\n    const panel = document.querySelector('#plugin-panel-prolease-manager .panel-content');\n    if (panel) {\n      this.renderControlPanel(panel as HTMLElement);\n    }\n  }\n\n  private promptNumber(message: string, defaultValue: number): number | null {\n    const input = prompt(message, String(defaultValue));\n    if (input === null) return null;\n    const num = parseFloat(input);\n    return isNaN(num) ? null : num;\n  }\n\n  private generateId(): string {\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private escapeHtml(text: string): string {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  private formatCurrency(value: number): string {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(value);\n  }\n}\n\n// ============================================================================\n// EXPORTS\n// ============================================================================\n\nexport const manifest = new ProLeasePlugin().manifest;\nexport default ProLeasePlugin;\n","/**\n * ProLease Plugin Entry Point for Standalone Build\n *\n * This file serves as the entry point when building the plugin as a standalone module\n */\n\nimport { ProLeasePlugin, manifest } from './prolease-ifrs16-plugin';\n\n// Export everything needed for the plugin\nexport { ProLeasePlugin, manifest };\n\n// Default export for convenience\nexport default {\n  ProLeasePlugin,\n  manifest,\n  version: '6.0.0',\n  name: 'ProLease IFRS 16',\n};\n"],"names":[],"mappings":"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"}